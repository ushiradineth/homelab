{ config, lib, pkgs, ... }:

{
  imports = [ ./hardware-configuration.nix ];

  # Boot
  boot.loader.grub.enable = true;
  boot.loader.grub.device = "/dev/sda";

  # Networking
  networking.hostName = "{{ HOST_NAME }}";
  networking.networkmanager.enable = true;
  networking.firewall.allowPing = false;
  networking.firewall.enable = true;
  networking.firewall.allowedTCPPorts = [
    {{ SSH_PORT }} # ssh
    7844 # cloudflared
    8433 # Crafty Dashboard
    25565 # MC Server
    4040 # ngrok Dashboard
  ];
  networking.firewall.allowedUDPPorts = [ 
    7844 # cloudflared
  ];

  # SSH
  services.openssh.enable = true;
  services.openssh.settings.PermitRootLogin = "yes";
  services.openssh.ports = [ {{ SSH_PORT }} ];

  # User
  users = {
    defaultUserShell = pkgs.zsh;
    users.{{ DEFAULT_USER | lower }} = {
      isNormalUser = true;
      extraGroups = [
        "wheel"
        "input"
        "video"
        "users"
        "docker"
      ];
      createHome = true;
      useDefaultShell = true;
    };
  };

  # UI
  services.xserver = {
    enable = {{ ENABLE_UI | lower }};
    videoDrivers = [ "nvidia" ];
    desktopManager.gnome.enable = true;
    displayManager.gdm.enable = true;
    displayManager.gdm.wayland = false;
    libinput.enable = true;
  };

  # Drivers
   hardware.opengl = {
    enable = {{ ENABLE_UI | lower }};
    driSupport = true;
    driSupport32Bit = true;
  };

  hardware.nvidia = {
    modesetting.enable = true;
    powerManagement.enable = false;
    powerManagement.finegrained = false;

    # Use Open Source drivers (not supported by 820M)
    open = false;
    
    # Enable the Nvidia settings menu.
    nvidiaSettings = false;

    # Optionally, you may need to select the appropriate driver version for your specific GPU.
    package = config.boot.kernelPackages.nvidiaPackages.legacy_390;

    prime = {
      sync.enable = true;
      nvidiaBusId = "PCI:3:0:0";
      intelBusId = "PCI:0:2:0";
    };
  };

  nixpkgs.config.allowUnfree = true;
  nixpkgs.config.allowBroken = true;
  nixpkgs.config.nvidia.acceptLicense = true;
  boot.kernelPackages = pkgs.linuxPackages_6_1;

  # Packages and Programs
  environment.systemPackages = with pkgs; [
{% for pkg in NIX_PACKAGES %}
    {{ pkg }}
{% endfor %}
  ];

  # Misc Services
  programs.zsh.enable = true;
  virtualisation.docker = {
    enable = true;
    enableNvidia = true;
  };

  # Kubernetes
  services.k3s.enable = true;
  services.k3s.role = "server";

  # Localization
  time.timeZone = "{{ TIMEZONE }}";
  i18n.defaultLocale = "en_US.UTF-8";

  # Power Saving
  ## Enable thermald (Intel CPUs Only)
  services.thermald.enable = true;

  ## Enable TLP (better than gnomes internal power manager)
  services.tlp = {
      enable = true;
      settings = {  
        CPU_SCALING_GOVERNOR_ON_AC = "performance";
        CPU_SCALING_GOVERNOR_ON_BAT = "powersave";

        CPU_ENERGY_PERF_POLICY_ON_AC = "performance";
        CPU_ENERGY_PERF_POLICY_ON_BAT = "power";

        CPU_MIN_PERF_ON_AC = 0;
        CPU_MAX_PERF_ON_AC = 100;
        CPU_MIN_PERF_ON_BAT = 0;
        CPU_MAX_PERF_ON_BAT = 20;

        #Optional helps save long term battery health
        START_CHARGE_THRESH_BAT0 = 40; # 40 and below it starts to charge
        STOP_CHARGE_THRESH_BAT0 = 80; # 80 and above it stops charging
      };
  };

  ## Disable GNOMEs power management
  services.power-profiles-daemon.enable = false;

  ## Enable powertop
  powerManagement.powertop.enable = true;

  ## Better scheduling for CPU cycles
  services.system76-scheduler.settings.cfsProfiles.enable = true;

  # Misc
  ## Keep system up when lid is closed
  services.logind.lidSwitch = "ignore";
  services.logind.lidSwitchExternalPower = "ignore";
  services.logind.lidSwitchDocked = "ignore";

  systemd.sleep.extraConfig = ''
    AllowSuspend=no
    AllowHibernation=no
    AllowHybridSleep=no
    AllowSuspendThenHibernate=no
  '';

  ## Copy the NixOS configuration file and link it from the resulting system
  system.copySystemConfiguration = true;

  ## Initial NixOS version. Do not change.
  system.stateVersion = "24.05";
}
